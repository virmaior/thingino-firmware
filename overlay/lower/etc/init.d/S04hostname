#!/bin/sh

. /usr/share/common

default_hostname() {
	echo "$(sed -n 's/^ID=//p' $FILE_OS_RELEASE)-$(soc -m)"
}

mac_suffix() {
	echo $wlan_mac | sed -E 's/://g;s/.*(.{4})$/\1/'
}

is_user_modified_hostname() {
	local hostname default_hostname os_hostname

	hostname="$(hostname)"

	if [ -z "$hostname" ]; then
		echo "- Hostname is blank or and should be generated"
		return 1
	fi

	if [ "(none)" = "$hostname" ]; then
		echo "- Hostname is '(none)' and should be generated"
		return 1
	fi

	if [ "$(default_hostname)" = "$hostname" ]; then
		echo "- Hostname $hostname is default and should be generated"
		return 1
	fi

	if echo "$hostname" | grep -i -q "^$(default_hostname)-[0-9a-f]\{4\}$"; then
		echo "- Hostname $hostname is auto-generated and should be regenerated if the MAC address has changed"
		return 1
	fi

	echo "- Hostname $hostname is custom, skipping generation"
	return 0
}

generate() {
	hostname="$(default_hostname)-$(mac_suffix)"
	echo "- Generated name: $hostname"

	if [ "$(hostname)" != "$hostname" ]; then
		echo "- Setting hostname to $hostname"
		hostname "$hostname"
	fi

	# Do not change hostname in $FILE_OS_RELEASE!

	ip="127.0.1.1"
	if [ "$(sed -nE "s/^$ip\s+(.*)$/\1/p" $FILE_HOSTS)" != "$hostname" ]; then
		echo "- Setting hostname in $FILE_HOSTS"
		sed -i "/^$ip/c$ip\t$hostname" $FILE_HOSTS
	fi

	if [ "$(cat $FILE_HOSTNAME)" != "$hostname" ]; then
		echo "- Saving hostname in $FILE_HOSTNAME"
		echo $hostname > $FILE_HOSTNAME
	fi
}

start() {
	echo "Setting hostname"

	is_user_modified_hostname || generate

	hostname=$(hostname)
	echo "- Hostname set to $hostname"
	HOSTNAME="$hostname"
	export HOSTNAME
}

case "$1" in
	start)
		start
		;;
	stop)
		true
		;;
	reset)
		generate
		;;
	*)
		echo "Usage: $0 {start|stop}"
		exit 1
		;;
esac

exit 0
