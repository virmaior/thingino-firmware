#!/bin/sh

. /usr/share/common

FILE_HOSTNAME=/etc/hostname
FILE_HOSTS=/etc/hosts
FILE_OS_RELEASE=/etc/os-release

set_hostname() {
	if [ "$(hostname)" != "$hostname" ]; then
		hostname "$hostname"
	fi
	echo "Hostname is $(hostname)"
}

update_hostname() {
	if [ "$(cat $FILE_HOSTNAME)" = "$hostname" ]; then
		return
	fi
	echo $hostname > $FILE_HOSTNAME
}

update_hosts() {
	local ip="127.0.1.1"
	if [ "$(sed -nE "s/^$ip\s+(.*)$/\1/p" $FILE_HOSTS)" = "$hostname" ]; then
		return
	fi
	sed -i "/^$ip/c$ip\t$hostname" $FILE_HOSTS
}

update_os_release() {
	if [ "$(sed -nE "s/^hostname=(.*)$/\1/p" $FILE_OS_RELEASE)" = "$hostname" ]; then
		return
	fi
	sed -i "/^hostname/s/=.*$/=$hostname/" $FILE_OS_RELEASE
}

generate() {
	os_hostname=$(sed -n 's/^HOSTNAME=//p' $FILE_OS_RELEASE)
	[ -z "$os_hostname" ] && os_hostname=$(cat /proc/sys/kernel/hostname)
	[ -z "$os_hostname" ] && os_hostname="thingino-$(soc -m)"
	echo "OS hostname: $os_hostname"

	mac_suffix=$(echo $wlan_mac | sed -E 's/://g;s/.*(.{4})$/\1/')
	echo "MAC suffix: $mac_suffix"

	hostname="${os_hostname}-$mac_suffix"
	echo "Generated hostname: $hostname"
}

get_default_hostname() {
	local id soc_type

	id=$(sed -n 's/^ID=//p' $FILE_OS_RELEASE)
	soc_type=$(soc)
	echo "${id}-${soc_type}"
}

is_user_modified_hostname() {
	local current default_hostname os_hostname

	current="$1"
	default_hostname=$(get_default_hostname)
	os_hostname=$(sed -n 's/^HOSTNAME=//p' $FILE_OS_RELEASE)

	# Check if hostname is blank or "(none)" - these should be replaced
	if [ -z "$current" ] || [ "$current" = "(none)" ]; then
		return 1
	fi

	# Check if it's the default hostname based on ID and soc from buildroot
	if [ "$current" = "$default_hostname" ]; then
		return 1
	fi

	# Check if it matches our auto-generated pattern (os_hostname-xxxx)
	if echo "$current" | grep -i -q "^${os_hostname}-[0-9a-f]\{4\}$"; then
		return 1
	fi

	# Otherwise, it's custom!
	return 0
}

start() {
	echo "Setting hostname"

	current_hostname=$(hostname)

	if is_user_modified_hostname "$current_hostname"; then
		# User has modified hostname, keep it
		hostname="$current_hostname"
		echo "Using custom hostname: $hostname"
	else
		# Use generated hostname
		generate
	fi

	set_hostname
	update_hosts
	#update_os_release
	update_hostname
	HOSTNAME="$hostname"
	export HOSTNAME
}

case "$1" in
	start)
		start
		;;
	stop)
		true
		;;
	*)
		echo "Usage: $0 {start|stop}"
		exit 1
		;;
esac

exit 0
