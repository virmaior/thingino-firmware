#!/bin/sh

. /usr/share/common

if [ ! -f "$CONFIG_FILE" ]; then
	echo_error "Config file $CONFIG_FILE not found"
	exit 1
fi

show_help() {
	local app=$(basename $0)
	echo "Thingino System Config Tool
Usage:
 $app g <param>           - Get parameter value
 $app s <param> <value>   - Set parameter value
 $app d <param>           - Delete parameter
 $app l [<filter>]        - List parameters matching filter
 $app --script <file>     - Import parameters from file (var=val format)
" >&2
	exit 1
}

backup() {
	cp "$CONFIG_FILE" "/tmp/$(basename $CONFIG_FILE).$(date +%s).bak"
}

case "$1" in
	g*)
		[ -z "$2" ] && show_help
		awk -F= "/^$2=/{gsub(/\"/,\"\",\$2);print \$2}" "$CONFIG_FILE"
		;;
	s*)
		[ -z "$2" ] && show_help
		# If no value provided or empty value, delete the parameter
		if [ -z "$3" ] || [ "$3" = "" ]; then
			backup
			sed -i "/^$2=/d" "$CONFIG_FILE"
		else
			backup
			value="$(echo "$3" | sed 's/"/\"/g')"
			if grep -q "^$2=" "$CONFIG_FILE"; then
				sed -i "/^$2=/c$2=\"$value\"" "$CONFIG_FILE"
			else
				tmpfile=$(mktemp)
				cat "$CONFIG_FILE" > "$tmpfile"
				echo "$2=\"$value\"" >> "$tmpfile"
				sed -i "/^\s*$/d" "$tmpfile"
				sort -u < "$tmpfile" > "$CONFIG_FILE"
			fi
		fi
		;;
	d*)
		[ -z "$2" ] && show_help
		backup
		sed -i "/^$2=/d" "$CONFIG_FILE"
		;;
	l*)
		grep "$2" "$CONFIG_FILE"
		;;
	--script)
		[ -z "$2" ] && show_help
		[ -f "$2" ] || { echo_error "Script file $2 not found"; exit 1; }
		backup
		# Process all parameters at once
		awk -F= 'NR==FNR && /^[a-zA-Z_][a-zA-Z0-9_]*=/ {
			gsub(/^[[:space:]]+|[[:space:]]+$/, "", $0)
			gsub(/^"|"$/, "", $2)
			gsub(/"/, "\\\"", $2)
			params[$1] = $2
			next
		}
		{
			if ($1 in params) {
				print $1 "=\"" params[$1] "\""
				delete params[$1]
			} else {
				print
			}
		}
		END {
			for (p in params) print p "=\"" params[p] "\""
		}' "$2" "$CONFIG_FILE" | sort -u > "$CONFIG_FILE.tmp" && mv "$CONFIG_FILE.tmp" "$CONFIG_FILE"
		;;
	*)
		show_help
		;;
esac

exit 0
