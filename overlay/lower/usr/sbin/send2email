#!/bin/env sh

. /usr/share/common

show_help() {
	echo "Usage: $0 [options]
Where:
	-f address  Sender's email address
	-t address  Recipient's email address
	-n host     SMTP server host.
	-p port     SMTP server port.
	-s subject  Subject line.
	-b body     Letter body.
	-k          Ignore SSL certificate validity.
	-v          Verbose output.
	-h          Show this help.
" >&2
	exit 0
}

verbosity="--silent"
while getopts b:f:kn:p:s:t:vh flag; do
	case "$flag" in
		b) email_body=$OPTARG ;;
		f) email_from_address=$OPTARG ;;
		k) email_insecure_ssl="true" ;;
		n) email_smtp_host=$OPTARG ;;
		p) email_smtp_port=$OPTARG ;;
		s) email_subject=$OPTARG ;;
		t) email_to_address=$OPTARG ;;
		v) verbosity="--verbose" ;;
		h | *) show_help ;;
	esac
done

if [ -z "$email_smtp_host" ]; then
	echo_error "SMTP host not found"
	exit 1
fi

if [ -z "$email_smtp_port" ]; then
	email_smtp_port=25
fi

if [ -z "$email_from_address" ]; then
	echo_error "Sender's email address not found"
	exit 1
fi

if [ -z "$email_to_address" ]; then
	echo_error "Recipient's email address not found"
	exit 1
fi

if [ -z "$email_body" ]; then
	echo_error "Email body not found"
	exit 1
fi

if ! echo "$email_from_address" | grep -E -q $EMAIL_FORMAT >/dev/null; then
	echo_error "Invalid sender email address format"
	exit 1
fi

if ! echo "$email_to_address" | grep -E -q $EMAIL_FORMAT >/dev/null; then
	echo_error "Invalid recipient email address format"
	exit 1
fi

if [ -z "$email_from_name" ]; then
	email_from_name="Thingino Camera"
fi

if [ -z "$email_to_name" ]; then
	email_to_name="Thingino Camera Admin"
fi

if [ -z "$email_subject" ]; then
	email_subject="Snapshot from Thingino Camera"
fi

command="$CURL $verbosity --mail-from $email_from_address --mail-rcpt $email_to_address"

if [ -n "$email_smtp_username" ] && [ -n "$email_smtp_password" ]; then
	command="$command --user '$email_smtp_username:$email_smtp_password'"
fi

if [ "true" = "$email_smtp_use_ssl" ]; then
	command="$command --url smtps://$email_smtp_host:$email_smtp_port --ssl"
	if [ "true" = "$email_insecure_ssl" ]; then
		command="$command --insecure"
	fi
else
	command="$command --url smtp://$email_smtp_host:$email_smtp_port"
fi

email_body=${email_body//"/\\"}
command="$command -H 'From: \"$email_from_name\" <$email_from_address>'"
command="$command -H 'To: \"$email_to_name\" <$email_to_address>'"
command="$command -H 'Subject: $email_subject'"
command="$command -F '=(;type=multipart/mixed'"
command="$command -F \"=${email_body};type=text/plain\""

if [ "true" = "$email_attach_snapshot" ]; then
	photo_attachment=$(mktemp -u).jpg
	cp -f "$SNAPSHOT_FILE" "$photo_attachment"
	command="$command -F 'snapshot=@$photo_attachment;type=image/jpeg;encoder=base64'"
fi

if [ "true" = "$email_attach_video" ]; then
	video_attachment=$(mktemp -u).mov
	cp -f "$VBUFFER_FILE" "$video_attachment"
	command="$command -F 'video=@$video_attachment;type=video/quicktime;encoder=base64'"
fi

command="$command -F '=)'"

if ! sh -c "$command"; then
	echo_error "Failed to send email"
	exit 1
fi

if [ -f "$photo_attachment" ]; then
	rm "$photo_attachment"
fi

if [ -f "$video_attachment" ]; then
	rm "$video_attachment"
fi

exit 0
