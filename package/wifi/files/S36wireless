#!/bin/sh

. /usr/share/common

IFACE=wlan0

init() {
	if [ "true" = "$disable_wlan" ]; then
		quit "WLAN disabled"
	fi

	if [ -z "$wlan_module" ]; then
		quit "wlan_module is not set"
	fi

	if [ -z "$gpio_wlan" ]; then
		echo "gpio_wlan is not set"
	else
		[ "$gpio_wlan" = "${gpio_wlan//[^0-9]/}" ] && gpio_wlan="${gpio_wlan}O"
		pin="${gpio_wlan:0:-1}"
		suffix="${gpio_wlan:0-1}"
		case "$suffix" in
			o) pin_on=0; pin_off=1 ;;
			O) pin_on=1; pin_off=0 ;;
			*) die "Unknown suffix!"
		esac
	fi
}

start() {
	starting
	init

	if [ -z "$pin" ]; then
		echo "GPIO pin for wireless module is not set"
	else
		echo "Set GPIO $pin to $pin_on"
		gpio set $pin $pin_on

		if [ "bcmdhd" = "$wlan_module" ]; then
			echo "Unexport GPIO pin $pin"
			gpio unexport $pin
		fi
	fi

	case "$wlan_module" in
		8189es | 8189fs | atbm6031 | b43 | bcmdhd | hi3881 | ssv6158)
			# Check if MDIO directory exists
			if [ -d /proc/jz/mdio ]; then
				echo "GMAC is enabled, disabling MSC1..."
			else
				case "$SOC_FAMILY" in
					t10 | t20 | t21 | t30 | t40 | t41)
						echo "Skip GPIO setup for $SOC_MODEL"
						;;
					t23 | t31)
						if [ "t31a" = "$SOC_MODEL" ]; then
							echo "Skip GPIO setup for $SOC_MODEL"
							return 1
						else
							set_gpio pb08 1 2
							set_gpio pb09 1 1
							set_gpio pb10 1 1
							set_gpio pb11 1 1
							set_gpio pb13 1 1
							set_gpio pb14 1 1
						fi
						;;
					*)
						die "Unsupported SOC type: $SOC_FAMILY"
						;;
				esac

				echo "Send INSERT to MMC1"
				mmc 1
			fi
			;;
		*)
			;; # MMC1 is not SDIO
	esac

	if [ -n "$wlan_mac" ] && [ "hi3881" = "$wlan_module" ]; then
		echo "Preset MAC address to $wlan_mac"
		sed -i "s/CFG_MAC=[^;]*;/CFG_MAC=$wlan_mac;/" /usr/share/wifi/wifi_cfg
	fi

	if grep -q "^$wlan_module\b" /proc/modules; then
		echo "Module $wlan_module is already loaded"
	else
		echo "Loading $wlan_module module with parameters $wlan_module_opts"
		modprobe $wlan_module $wlan_module_opts
	fi

	m=50 # limit to 5 seconds
	while [ "$m" -gt 0 ]; do
		grep -q $IFACE /proc/net/wireless && break
		m=$((m-1))
		sleep 0.1
	done

	if [ -n "$wlan_mac" ] && [ "hi3881" != "$wlan_module" ]; then
		echo "Set MAC address to $wlan_mac"
		ip link set dev $IFACE down
		ip link set dev $IFACE address $wlan_mac
                ip link set dev $IFACE up
	fi
}

stop() {
	stopping
	ifdown $IFACE
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	*)
		die "Usage: $0 {start|stop}"
		;;
esac

exit 0
