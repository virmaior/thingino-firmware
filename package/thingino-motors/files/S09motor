#!/bin/sh

DAEMON="motors-daemon"
DAEMON_ARGS="-d -p"

. /usr/share/common

set_motor_phases() {
	if [ "$(echo $2 | wc -w)" -lt 4 ]; then
		echo "Missing phase for ${1}motor"
		exit 1
	fi

	local i=1
	for gpio in $2; do
		eval "${1}st${i}=$gpio"
		i=$((i + 1))
	done
}

home_motors() {
	echo "Home motors"
	motors -r > /dev/null 2>&1
}

set_motors_speed() {
	echo "Set motors speed to $motor_speed"
	motors -s $1 > /dev/null 2>&1
}

position_motors() {
	local x y motor_pos_0

	x=$((motor_maxstep_h / 2))
	y=$((motor_maxstep_v / 2))
	if [ -n "$motor_pos_0" ]; then
		x=$(echo $motor_pos_0 | cut -d, -f1)
		y=$(echo $motor_pos_0 | cut -d, -f2)
	fi

	echo "Move to $x,$y"
	motors -d h -x $x -y $y > /dev/null 2>&1
}

start() {
	echo " Setting up motors"

	motors_app=$(which motors)

	# Check if motors are supported
	if [ -z "$motors_app" ]; then
		echo " No motors app found"
		exit 1
	fi

	if [ -z "$gpio_motor_h" ]; then
		echo " Pan motor GPIO pins are not set"
		exit 1
	fi

	if [ -z "$gpio_motor_switch" ] && [ -z "$gpio_motor_v" ]; then
		echo " Tilt motor GPIO pins are not set"
		exit 1
	fi

	if [ -z "$motor_maxstep_h" ]; then
		echo" Pan motor Steps are not set"
		exit 1
	fi

	if [ -z "$motor_maxstep_v" ]; then
		echo" Tilt motor Steps are not set"
		exit 1
	fi

	if [ -z "$motor_speed" ]; then
		motor_speed=900
	fi

	if [ "true" = "$gpio_motor_invert" ]; then
		gpio_motor_invert_opt="invert_gpio_dir=1"
	fi

	if [ -n "$gpio_motor_switch" ]; then
		direction_select_gpio="shared_gpio_mode=0 direction_select_gpio=$gpio_motor_switch"
	fi

	if grep -qE "^motor" /proc/modules; then
		echo "Module motor already loaded."
	else
		echo "Set GPIO per motor phase"
		set_motor_phases "h" "$gpio_motor_h"
		if [ -z "$gpio_motor_switch" ]; then
			set_motor_phases "v" "$gpio_motor_v"
		fi

		echo "Load module with parameters"

		modprobe_args="hmaxstep=$motor_maxstep_h vmaxstep=$motor_maxstep_v \
			hst1=$hst1 hst2=$hst2 hst3=$hst3 hst4=$hst4 \
			$gpio_motor_invert_opt $direction_select_gpio"

		if [ -z "$gpio_motor_switch" ]; then
			modprobe_args="$modprobe_args vst1=$vst1 vst2=$vst2 vst3=$vst3 vst4=$vst4"
		fi

		if ! modprobe motor $modprobe_args; then
			echo "Failed to load motor module"
			exit 1
		fi
	fi

	start_daemon
	# FIXME: daemon should be reporting running state from the very first moment
	sleep 1

	set_motors_speed $motor_speed

	if [ "true" = "$motor_disable_homing" ]; then
		echo "Homing disabled"
	else
		home_motors
		position_motors
	fi
}

stop() {
	echo " Stopping motors"

	stop_daemon
	# FIXME: motor.ko crashes on upload
	# rmmod motor || die "Failed to unload motor module."
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart | reload)
		stop
		sleep 1
		start
		;;
	*)
		echo "Usage: $0 {start|stop|restart|reload}"
		exit 1
		;;
esac

exit 0
